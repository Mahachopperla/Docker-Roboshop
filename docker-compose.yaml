networks:
  default:
    driver: bridge
    name: roboshop # Use a custom name
    external: true # it indicated a custom network already created in your docker server. SO Compose doesn't attempt to create these networks, and returns an error if one doesn't exist.
volumes:
  mongodb: # -> this is equivalent to docker volume create mongodb
  redis:
  mysql:
  rabbitmq:
services:
  mongodb:
    image: maha110/mongodb:v1
    container_name: mongodb
    volumes:
      - mongodb:/data/db  
# the above mongodb service block is equivalent to docker run -d --name mongodb --network roboshop -v mongodb:/data/db maha110/mongodb:v1
  catalogue:
    image: maha110/catalogue:v1
    container_name: catalogue
    environment:
      MONGO:  "true"
      MONGO_URL:  "mongodb://mongodb:27017/catalogue"
    depends_on:
    - mongodb
  redis:
    image: maha110/redis:v1
    container_name: redis
    volumes:
      - redis:/data
  user:
    image: maha110/user:v1
    container_name: user
    environment:
      MONGO:  "true" 
      REDIS_URL:  'redis://redis:6379'
      MONGO_URL:  "mongodb://mongodb:27017/users"
    depends_on:
    - redis
    - mongodb
  cart:
    image: maha110/cart:v1
    container_name: cart
    environment:
      REDIS_HOST: "redis"
      CATALOGUE_HOST: "catalogue" 
      CATALOGUE_PORT: "8080"
    depends_on:
    - redis
    - catalogue
  mysql:
    image: maha110/mysql:v1
    container_name: mysql
    volumes:
      - mysql:/var/lib/mysql
  shipping:
    image: maha110/shipping:v1
    container_name: shipping
    depends_on:
    - mysql
    - cart
  rabbitmq:
    image: maha110/rabbitmq:v1
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: roboshop
      RABBITMQ_DEFAULT_PASS: roboshop123
    volumes:
      - rabbitmq:/var/lib/rabbitmq
  payment:
    image: maha110/payment:v1
    container_name: payment
    depends_on:
    - rabbitmq
    - cart
    - user
  frontend:
    image: maha110/frontend:v1
    container_name: frontend
    ports:
    - "80:80"
    depends_on:
    - catalogue
    - user
    - cart
    - shipping
    - payment


#better practise is to declare env variables also in docker compose but not directly in image.
#because if you want to change any env variable u should rebuild image if they are declared in images. instead if u declare them in compose u no need to rebuild images if nay change in env variables.

